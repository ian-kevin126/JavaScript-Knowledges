Императи́вное программи́рование — это парадигма программирования (стиль написания исходного кода компьютерной программы), для которой характерно следующее:

в исходном коде программы записываются инструкции (команды);
инструкции должны выполняться последовательно;
при выполнении инструкции данные, полученные при выполнении предыдущих инструкций, могут читаться из памяти;
данные, полученные при выполнении инструкции, могут записываться в память.
Императивная программа похожа на приказы (англ. imperative — приказ, повелительное наклонение), выражаемые повелительным наклонением в естественных языках, то есть представляют собой последовательность команд, которые должен выполнить компьютер.

При императивном подходе к составлению кода (в отличие от функционального подхода, относящегося к декларативной парадигме) широко используется присваивание. Наличие операторов присваивания увеличивает сложность модели вычислений и делает императивные программы подверженными специфическим ошибкам, не встречающимся при функциональном подходе[1].

Основные черты императивных языков:

использование именованных переменных;
использование оператора присваивания;
использование составных выражений;
использование подпрограмм;
и др.